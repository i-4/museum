ゼミの活動で作りました。
美術館パズルというパズルを解くことができるプログラムです。
美術館パズルの遊び方、ルール：https://www.nikoli.co.jp/ja/puzzles/akari/

問題の美術館パズルのファイルは、一行目に幅、高さがあり、二行目以降が盤面になります。
xは黒マス、oは照明です。何もないマスは白マスです。

問題が解けたら、問題のファイルと同じディレクトリに、ファイル名_solvedという名前で、解答ファイルが作られます。
ネット上にあるプログラムを見る限り、おそらく最速です。
整数線形計画法を使う方法もありますが、pythonのmipソルバーで検証したところ、どうしても0.2秒はかかります。
自作ソルバーでは、外部ライブラリを使わずに作成しています。

実行時間例-----------------------------------------------------
                    ex1(7x7) ex2(10x10) ex3(10x18) ex4(20x36) 
pythonのmipソルバー 0.215s   0.215s     0.234s     0.413s 　  
自作ソルバー        0.001s   0.003s     0.005s     0.270s     
---------------------------------------------------------------

プログラムの簡単な手順-----------------------------------------------------------------------
1.ロジックでなるべく照明の置く場所、置かれない場所を決める。
2.照明を仮置きをして、制約に違反した段階で、元に戻しながら解に近づいていく。

ロジック段階と、仮置き段階に分けて、順番に処理していく。

プログラムの簡単な流れ(ロジック段階)
1.すべての数字マスの場所を記録する。
2.記録されたすべて数字マスについて、以下３,4,5を実行する
3.必ず照明が置かれる場所に照明を置く。
4.照明が置かれた場所の連続する白マスには、照明が置けない印をつける。
5.照明が置けない印のついたマスに接している数字マスの場所を記録しておく。
6.最後に、孤立した白マス、自分のを照らすことができるマスが一つしかないマスなどに、照明を置く。

プログラムの簡単な流れ(仮置き段階)
1.数字マスに注目して、照明が置ける組み合わせを求める。
2.組み合わせの一つについて、照明を置く前の場所と状態を記録する。
3.照明を仮置きをし、そのマスについて、ロジック段階の２～４を実行する。
4.美術館の制約に違反したら、仮置きが間違っていたので、記録情報をもとに、前の状態まで戻す。
5.新たな組み合わせについて、２から３を実行する。
6.仮置きに成功したら次の仮置きの場所を探して、１に戻る。
7.ロジック段階同様、孤立した白マスなどに照明を置く。
----------------------------------------------------------------------------------------------
